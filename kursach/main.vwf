/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("addressIn")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 11;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("addressIn[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "addressIn";
}

SIGNAL("addressIn[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "addressIn";
}

SIGNAL("addressIn[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "addressIn";
}

SIGNAL("addressIn[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "addressIn";
}

SIGNAL("addressIn[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "addressIn";
}

SIGNAL("addressIn[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "addressIn";
}

SIGNAL("addressIn[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "addressIn";
}

SIGNAL("addressIn[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "addressIn";
}

SIGNAL("addressIn[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "addressIn";
}

SIGNAL("addressIn[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "addressIn";
}

SIGNAL("addressIn[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "addressIn";
}

SIGNAL("Control_cpu")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Control_cpu[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Control_cpu";
}

SIGNAL("Control_cpu[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Control_cpu";
}

SIGNAL("Control_cpu[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Control_cpu";
}

SIGNAL("Control_cpu[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Control_cpu";
}

SIGNAL("Control_cpu[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Control_cpu";
}

SIGNAL("Control_cpu[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Control_cpu";
}

SIGNAL("CPU_DATA")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 10;
	LSB_INDEX = 0;
	DIRECTION = BIDIR;
	PARENT = "";
}

SIGNAL("CPU_DATA[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "CPU_DATA";
}

SIGNAL("CPU_DATA[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "CPU_DATA";
}

SIGNAL("CPU_DATA[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "CPU_DATA";
}

SIGNAL("CPU_DATA[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "CPU_DATA";
}

SIGNAL("CPU_DATA[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "CPU_DATA";
}

SIGNAL("CPU_DATA[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "CPU_DATA";
}

SIGNAL("CPU_DATA[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "CPU_DATA";
}

SIGNAL("CPU_DATA[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "CPU_DATA";
}

SIGNAL("CPU_DATA[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "CPU_DATA";
}

SIGNAL("CPU_DATA[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "CPU_DATA";
}

SIGNAL("HIT")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MISS")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("CPU_DATA[9]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("CPU_DATA[8]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("CPU_DATA[7]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("CPU_DATA[6]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("CPU_DATA[5]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("CPU_DATA[4]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("CPU_DATA[3]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("CPU_DATA[2]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("CPU_DATA[1]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("CPU_DATA[0]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("AddressMeme")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 11;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("AddressMeme[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AddressMeme";
}

SIGNAL("AddressMeme[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AddressMeme";
}

SIGNAL("AddressMeme[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AddressMeme";
}

SIGNAL("AddressMeme[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AddressMeme";
}

SIGNAL("AddressMeme[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AddressMeme";
}

SIGNAL("AddressMeme[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AddressMeme";
}

SIGNAL("AddressMeme[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AddressMeme";
}

SIGNAL("AddressMeme[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AddressMeme";
}

SIGNAL("AddressMeme[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AddressMeme";
}

SIGNAL("AddressMeme[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AddressMeme";
}

SIGNAL("AddressMeme[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AddressMeme";
}

SIGNAL("controlMem")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("controlMem[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "controlMem";
}

SIGNAL("controlMem[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "controlMem";
}

SIGNAL("controlMem[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "controlMem";
}

SIGNAL("controlMem[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "controlMem";
}

SIGNAL("MEM_DATA")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 10;
	LSB_INDEX = 0;
	DIRECTION = BIDIR;
	PARENT = "";
}

SIGNAL("MEM_DATA[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "MEM_DATA";
}

SIGNAL("MEM_DATA[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "MEM_DATA";
}

SIGNAL("MEM_DATA[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "MEM_DATA";
}

SIGNAL("MEM_DATA[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "MEM_DATA";
}

SIGNAL("MEM_DATA[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "MEM_DATA";
}

SIGNAL("MEM_DATA[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "MEM_DATA";
}

SIGNAL("MEM_DATA[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "MEM_DATA";
}

SIGNAL("MEM_DATA[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "MEM_DATA";
}

SIGNAL("MEM_DATA[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "MEM_DATA";
}

SIGNAL("MEM_DATA[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "MEM_DATA";
}

SIGNAL("MEM_DATA[9]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MEM_DATA[8]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MEM_DATA[7]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MEM_DATA[6]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MEM_DATA[5]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MEM_DATA[4]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MEM_DATA[3]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MEM_DATA[2]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MEM_DATA[1]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MEM_DATA[0]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("check")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("check[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "check";
}

SIGNAL("check[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "check";
}

SIGNAL("WORDS_FROM_CASH")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 10;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("WORDS_FROM_CASH[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "WORDS_FROM_CASH";
}

SIGNAL("WORDS_FROM_CASH[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "WORDS_FROM_CASH";
}

SIGNAL("WORDS_FROM_CASH[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "WORDS_FROM_CASH";
}

SIGNAL("WORDS_FROM_CASH[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "WORDS_FROM_CASH";
}

SIGNAL("WORDS_FROM_CASH[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "WORDS_FROM_CASH";
}

SIGNAL("WORDS_FROM_CASH[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "WORDS_FROM_CASH";
}

SIGNAL("WORDS_FROM_CASH[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "WORDS_FROM_CASH";
}

SIGNAL("WORDS_FROM_CASH[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "WORDS_FROM_CASH";
}

SIGNAL("WORDS_FROM_CASH[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "WORDS_FROM_CASH";
}

SIGNAL("WORDS_FROM_CASH[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "WORDS_FROM_CASH";
}

SIGNAL("kek")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("kek[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "kek";
}

SIGNAL("kek[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "kek";
}

SIGNAL("kek[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "kek";
}

SIGNAL("kek[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "kek";
}

SIGNAL("kek[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "kek";
}

SIGNAL("fff")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("addressIn[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 310.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 350.0;
	}
}

TRANSITION_LIST("addressIn[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 130.0;
	}
}

TRANSITION_LIST("addressIn[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 370.0;
		LEVEL 1 FOR 130.0;
	}
}

TRANSITION_LIST("addressIn[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 130.0;
	}
}

TRANSITION_LIST("addressIn[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 510.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 350.0;
	}
}

TRANSITION_LIST("addressIn[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("addressIn[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("addressIn[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 310.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 630.0;
	}
}

TRANSITION_LIST("addressIn[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 860.0;
	}
}

TRANSITION_LIST("addressIn[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 130.0;
	}
}

TRANSITION_LIST("addressIn[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 130.0;
	}
}

TRANSITION_LIST("Control_cpu[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Control_cpu[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Control_cpu[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Control_cpu[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 370.0;
	}
}

TRANSITION_LIST("Control_cpu[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 350.0;
	}
}

TRANSITION_LIST("Control_cpu[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 100;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
	}
}

TRANSITION_LIST("CPU_DATA[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 210.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 90.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 120.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 370.0;
	}
}

TRANSITION_LIST("CPU_DATA[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 210.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 90.0;
		LEVEL 1 FOR 60.0;
		LEVEL Z FOR 120.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 370.0;
	}
}

TRANSITION_LIST("CPU_DATA[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 210.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 90.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 120.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 370.0;
	}
}

TRANSITION_LIST("CPU_DATA[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 210.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 90.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 120.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 370.0;
	}
}

TRANSITION_LIST("CPU_DATA[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 210.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 90.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 120.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 120.0;
		LEVEL Z FOR 370.0;
	}
}

TRANSITION_LIST("CPU_DATA[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 210.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 90.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 120.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 120.0;
		LEVEL Z FOR 370.0;
	}
}

TRANSITION_LIST("CPU_DATA[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 210.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 90.0;
		LEVEL 1 FOR 60.0;
		LEVEL Z FOR 120.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 120.0;
		LEVEL Z FOR 370.0;
	}
}

TRANSITION_LIST("CPU_DATA[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 210.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 90.0;
		LEVEL 1 FOR 60.0;
		LEVEL Z FOR 120.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 120.0;
		LEVEL Z FOR 370.0;
	}
}

TRANSITION_LIST("CPU_DATA[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 210.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 90.0;
		LEVEL 1 FOR 60.0;
		LEVEL Z FOR 120.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 120.0;
		LEVEL Z FOR 370.0;
	}
}

TRANSITION_LIST("CPU_DATA[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 210.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 90.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 120.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 370.0;
	}
}

TRANSITION_LIST("HIT")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 350.0;
	}
}

TRANSITION_LIST("MISS")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 110.0;
		LEVEL 0 FOR 380.0;
	}
}

TRANSITION_LIST("CPU_DATA[9]~result")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 60.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 10.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 350.0;
	}
}

TRANSITION_LIST("CPU_DATA[8]~result")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 60.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 1 FOR 60.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 10.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 350.0;
	}
}

TRANSITION_LIST("CPU_DATA[7]~result")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 60.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 10.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 350.0;
	}
}

TRANSITION_LIST("CPU_DATA[6]~result")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 60.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 10.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 350.0;
	}
}

TRANSITION_LIST("CPU_DATA[5]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 60.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL Z FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 120.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 350.0;
	}
}

TRANSITION_LIST("CPU_DATA[4]~result")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 60.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL Z FOR 10.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 350.0;
	}
}

TRANSITION_LIST("CPU_DATA[3]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 60.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 1 FOR 60.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL Z FOR 10.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 350.0;
	}
}

TRANSITION_LIST("CPU_DATA[2]~result")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 60.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 1 FOR 60.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 10.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 350.0;
	}
}

TRANSITION_LIST("CPU_DATA[1]~result")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 60.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 1 FOR 60.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL Z FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 120.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 350.0;
	}
}

TRANSITION_LIST("CPU_DATA[0]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 60.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 60.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 10.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 350.0;
	}
}

TRANSITION_LIST("AddressMeme[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 310.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 350.0;
	}
}

TRANSITION_LIST("AddressMeme[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 60.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 130.0;
	}
}

TRANSITION_LIST("AddressMeme[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 60.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 370.0;
		LEVEL 1 FOR 130.0;
	}
}

TRANSITION_LIST("AddressMeme[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 60.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 130.0;
	}
}

TRANSITION_LIST("AddressMeme[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 510.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 350.0;
	}
}

TRANSITION_LIST("AddressMeme[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("AddressMeme[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("AddressMeme[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 310.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 630.0;
	}
}

TRANSITION_LIST("AddressMeme[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 860.0;
	}
}

TRANSITION_LIST("AddressMeme[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 350.0;
	}
}

TRANSITION_LIST("AddressMeme[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 10.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
		}
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 10.0;
			NODE
			{
				REPEAT = 2;
				LEVEL Z FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
		}
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 350.0;
	}
}

TRANSITION_LIST("controlMem[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("controlMem[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 520.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 440.0;
	}
}

TRANSITION_LIST("controlMem[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 190.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 130.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 380.0;
	}
}

TRANSITION_LIST("controlMem[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 100;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
	}
}

TRANSITION_LIST("MEM_DATA[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 1000.0;
	}
}

TRANSITION_LIST("MEM_DATA[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 1000.0;
	}
}

TRANSITION_LIST("MEM_DATA[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 1000.0;
	}
}

TRANSITION_LIST("MEM_DATA[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 1000.0;
	}
}

TRANSITION_LIST("MEM_DATA[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 1000.0;
	}
}

TRANSITION_LIST("MEM_DATA[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 1000.0;
	}
}

TRANSITION_LIST("MEM_DATA[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 1000.0;
	}
}

TRANSITION_LIST("MEM_DATA[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 1000.0;
	}
}

TRANSITION_LIST("MEM_DATA[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 1000.0;
	}
}

TRANSITION_LIST("MEM_DATA[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 1000.0;
	}
}

TRANSITION_LIST("MEM_DATA[9]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 190.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 380.0;
	}
}

TRANSITION_LIST("MEM_DATA[8]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 190.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 380.0;
	}
}

TRANSITION_LIST("MEM_DATA[7]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 190.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 380.0;
	}
}

TRANSITION_LIST("MEM_DATA[6]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 190.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 380.0;
	}
}

TRANSITION_LIST("MEM_DATA[5]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 190.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 50.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 380.0;
	}
}

TRANSITION_LIST("MEM_DATA[4]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 190.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 50.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 70.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 380.0;
	}
}

TRANSITION_LIST("MEM_DATA[3]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 190.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 380.0;
	}
}

TRANSITION_LIST("MEM_DATA[2]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 190.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 50.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 70.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL Z FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL Z FOR 380.0;
	}
}

TRANSITION_LIST("MEM_DATA[1]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 190.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 50.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 70.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 380.0;
	}
}

TRANSITION_LIST("MEM_DATA[0]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL Z FOR 190.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL Z FOR 50.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 380.0;
	}
}

TRANSITION_LIST("check[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 530.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 450.0;
	}
}

TRANSITION_LIST("check[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 520.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 430.0;
	}
}

TRANSITION_LIST("WORDS_FROM_CASH[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 60.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 60.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 350.0;
	}
}

TRANSITION_LIST("WORDS_FROM_CASH[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 60.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 60.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 350.0;
	}
}

TRANSITION_LIST("WORDS_FROM_CASH[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 60.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 350.0;
	}
}

TRANSITION_LIST("WORDS_FROM_CASH[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 60.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 60.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 350.0;
	}
}

TRANSITION_LIST("WORDS_FROM_CASH[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 60.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL Z FOR 10.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 60.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 350.0;
	}
}

TRANSITION_LIST("WORDS_FROM_CASH[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 60.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL Z FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 60.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 350.0;
	}
}

TRANSITION_LIST("WORDS_FROM_CASH[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 60.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL Z FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 60.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 350.0;
	}
}

TRANSITION_LIST("WORDS_FROM_CASH[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 60.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 80.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL Z FOR 60.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 350.0;
	}
}

TRANSITION_LIST("WORDS_FROM_CASH[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 60.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL Z FOR 10.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 60.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 350.0;
	}
}

TRANSITION_LIST("WORDS_FROM_CASH[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 60.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 80.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 60.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL Z FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 350.0;
	}
}

TRANSITION_LIST("kek[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 615.0;
		LEVEL 1 FOR 385.0;
	}
}

TRANSITION_LIST("kek[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 945.0;
	}
}

TRANSITION_LIST("kek[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 560.0;
		LEVEL 0 FOR 385.0;
	}
}

TRANSITION_LIST("kek[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 945.0;
	}
}

TRANSITION_LIST("kek[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 615.0;
		LEVEL 1 FOR 385.0;
	}
}

TRANSITION_LIST("fff")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 215.0;
		LEVEL 1 FOR 95.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 375.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "check";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	CHILDREN = 1, 2;
}

DISPLAY_LINE
{
	CHANNEL = "check[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 1;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "check[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "fff";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "kek";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
	CHILDREN = 5, 6, 7, 8, 9;
}

DISPLAY_LINE
{
	CHANNEL = "kek[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "kek[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "kek[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "kek[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "kek[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "addressIn";
	EXPAND_STATUS = EXPANDED;
	RADIX = Unsigned;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
	CHILDREN = 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21;
}

DISPLAY_LINE
{
	CHANNEL = "addressIn[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "addressIn[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "addressIn[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "addressIn[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "addressIn[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "addressIn[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "addressIn[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "addressIn[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "addressIn[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "addressIn[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "addressIn[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "Control_cpu";
	EXPAND_STATUS = EXPANDED;
	RADIX = Unsigned;
	TREE_INDEX = 22;
	TREE_LEVEL = 0;
	CHILDREN = 23, 24, 25, 26, 27, 28;
}

DISPLAY_LINE
{
	CHANNEL = "Control_cpu[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "Control_cpu[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "Control_cpu[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "Control_cpu[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "Control_cpu[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "Control_cpu[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "HIT";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 29;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "MISS";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 30;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "AddressMeme";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 31;
	TREE_LEVEL = 0;
	CHILDREN = 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42;
}

DISPLAY_LINE
{
	CHANNEL = "AddressMeme[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "AddressMeme[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "AddressMeme[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "AddressMeme[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "AddressMeme[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "AddressMeme[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "AddressMeme[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "AddressMeme[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "AddressMeme[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "AddressMeme[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "AddressMeme[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "controlMem";
	EXPAND_STATUS = EXPANDED;
	RADIX = Unsigned;
	TREE_INDEX = 43;
	TREE_LEVEL = 0;
	CHILDREN = 44, 45, 46, 47;
}

DISPLAY_LINE
{
	CHANNEL = "controlMem[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "controlMem[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "controlMem[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "controlMem[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "WORDS_FROM_CASH";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 48;
	TREE_LEVEL = 0;
	CHILDREN = 49, 50, 51, 52, 53, 54, 55, 56, 57, 58;
}

DISPLAY_LINE
{
	CHANNEL = "WORDS_FROM_CASH[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "WORDS_FROM_CASH[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "WORDS_FROM_CASH[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "WORDS_FROM_CASH[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "WORDS_FROM_CASH[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "WORDS_FROM_CASH[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "WORDS_FROM_CASH[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "WORDS_FROM_CASH[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "WORDS_FROM_CASH[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "WORDS_FROM_CASH[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 59;
	TREE_LEVEL = 0;
	CHILDREN = 60, 61, 62, 63, 64, 65, 66, 67, 68, 69;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 59;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 59;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 59;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 59;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 59;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 59;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 59;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 59;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 59;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 59;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA[9]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 70;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA[8]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 71;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA[7]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 72;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA[6]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 73;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA[5]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 74;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA[4]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 75;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA[3]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 76;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA[2]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 77;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA[1]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 78;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA[0]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 79;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CPU_DATA";
	EXPAND_STATUS = EXPANDED;
	RADIX = Unsigned;
	TREE_INDEX = 80;
	TREE_LEVEL = 0;
	CHILDREN = 81, 82, 83, 84, 85, 86, 87, 88, 89, 90;
}

DISPLAY_LINE
{
	CHANNEL = "CPU_DATA[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "CPU_DATA[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "CPU_DATA[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "CPU_DATA[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 84;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "CPU_DATA[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 85;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "CPU_DATA[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 86;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "CPU_DATA[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 87;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "CPU_DATA[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 88;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "CPU_DATA[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 89;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "CPU_DATA[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 90;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "CPU_DATA[9]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 91;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CPU_DATA[8]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 92;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CPU_DATA[7]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 93;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CPU_DATA[6]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 94;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CPU_DATA[5]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 95;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CPU_DATA[4]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 96;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CPU_DATA[3]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 97;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CPU_DATA[2]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 98;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CPU_DATA[1]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 99;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CPU_DATA[0]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 100;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 40000;
	MASTER = TRUE;
}
;
